using Biohazrd.Transformation.Infrastructure;
using ClangSharp;

namespace Biohazrd.Transformation
{
    /// <summary>Represents a type declaration which will be defined outside of the code generated by Biohazrd</summary>
    public sealed record ExternallyDefinedTypeDeclaration : TranslatedDeclaration, ICustomTranslatedDeclaration
    {
        public bool ShouldSanitize { get; init; } = false;

        public ExternallyDefinedTypeDeclaration(string name, TranslatedDeclaration oldDeclaration)
            : base(oldDeclaration)
            => Name = name;

        public ExternallyDefinedTypeDeclaration(string name, Decl clangDecl)
            : base(TranslatedFile.Synthesized, clangDecl)
            => Name = name;

        TransformationResult ICustomTranslatedDeclaration.TransformChildren(ITransformation transformation, TransformationContext context)
            => this;

        TransformationResult ICustomTranslatedDeclaration.TransformTypeChildren(ITypeTransformation transformation, TransformationContext context)
            => this;

        public override string ToString()
            => $"ExternallyDefinedType {Namespace}{(Namespace is null ? "" : ".")}{Name}";
    }
}
